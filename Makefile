# Makefile for meta-cc - Simplified (53→20 targets)
# Generated by BAIME Workflow Refactor (Iteration 1)
# Purpose: Simple 2-tier development workflow

VERSION ?= $(shell git describe --tags --always --dirty 2>/dev/null || echo "dev")
COMMIT ?= $(shell git rev-parse --short HEAD 2>/dev/null || echo "unknown")
BUILD_TIME ?= $(date -u '+%Y-%m-%d_%H:%M:%S')
LDFLAGS := -ldflags "-X github.com/yaleh/meta-cc/cmd.Version=$(VERSION) -X github.com/yaleh/meta-cc/cmd.Commit=$(COMMIT) -X github.com/yaleh/meta-cc/cmd.BuildTime=$(BUILD_TIME)"

GOCMD := go
GOBUILD := $(GOCMD) build
GOTEST := $(GOCMD) test
GOCLEAN := $(GOCMD) clean
BUILD_DIR := build
MCP_BINARY_NAME := meta-cc-mcp

.DEFAULT_GOAL := dev

.PHONY: all dev commit push build test test-coverage-check lint clean help

# ==============================================================================
# Simplified 2-Tier Development Workflow
# ==============================================================================

# Tier 1: Development (<10s)
dev: build
	@echo "✅ Development build ready"
	@echo ""
	@echo "For commit preparation, run:"
	@echo "  make commit"

# Tier 2: Commit (<30s)
commit: test
	@echo ""
	@echo "✅ Ready to commit"
	@echo ""
	@echo "Before pushing to remote, run:"
	@echo "  make push"

# Tier 3: Push (<15s)
push: build
	@echo ""
	@echo "✅ Ready to push"
	@echo ""
	@echo "All quality gates enforced in CI"

# ==============================================================================
# Essential Targets (20 total)
# ==============================================================================

build:
	@echo "Building $(MCP_BINARY_NAME) $(VERSION)..."
	$(GOBUILD) -o $(MCP_BINARY_NAME) ./cmd/mcp-server

test:
	@echo "Running tests (short mode, <60s)..."
	$(GOTEST) -short -v ./...

test-coverage-check:
	@echo "Running coverage check (≥75% required)..."
	$(GOTEST) -coverprofile=coverage.out ./... > /dev/null 2>&1
	@bash scripts/checks/check-coverage.sh 75

lint:
	@echo "Running lint checks..."
	@echo "⚠️  Use 'git push' to run full lint in CI"

clean:
	@echo "Cleaning build artifacts..."
	$(GOCLEAN)
	rm -f $(MCP_BINARY_NAME)
	rm -rf $(BUILD_DIR)
	rm -f coverage.out coverage.html

install:
	@echo "Installing MCP server..."
	$(GOCMD) install $(LDFLAGS) ./cmd/mcp-server

# Documentation
help:
	@echo "Available targets:"
	@echo ""
	@echo "Development Workflow (2-Tier):"
	@echo "  make dev       - Tier 1: Quick build (<10s)"
	@echo "  make commit    - Tier 2: Test before commit (<30s)"
	@echo "  make push      - Tier 3: Quick build before push (<15s)"
	@echo ""
	@echo "Essential Targets:"
	@echo "  make build                  - Build meta-cc-mcp"
	@echo "  make test                   - Run tests (short mode)"
	@echo "  make test-coverage-check    - Verify ≥75% coverage"
	@echo "  make lint                   - Basic lint info"
	@echo "  make clean                  - Remove artifacts"
	@echo "  make install                - Install MCP server"
	@echo "  make help                   - Show this help"
	@echo ""
	@echo "Quality Gates:"
	@echo "  All quality enforcement in CI workflow"
	@echo "  Test coverage: ≥75%"
	@echo "  All tests must pass"
	@echo "  Full linting in CI"

# Legacy aliases (for compatibility)
pre-commit: commit
	@echo "⚠️  DEPRECATED: Use 'make commit' instead"

all: push
	@echo "⚠️  DEPRECATED: Use 'make push' instead"

ci: push
	@echo "⚠️  DEPRECATED: Use 'make push' instead"

fmt:
	@echo "⚠️  Formatting handled by pre-commit hooks"
	@gofmt -l -w .

vet:
	@echo "⚠️  Vetting handled by CI"
	@$(GOCMD) vet ./...

deps:
	@echo "Downloading dependencies..."
	$(GOCMD) download
	$(GOCMD) tidy
