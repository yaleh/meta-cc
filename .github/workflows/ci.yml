name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ['1.21', '1.22']
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Verify plugin file sync
        shell: bash
        run: |
          bash scripts/sync-plugin-files.sh

          # Check sync succeeded
          if [ ! -d "commands" ] || [ ! -d "agents" ]; then
            echo "ERROR: Plugin file sync failed"
            exit 1
          fi

          # Check file count consistency
          CLAUDE_CMD_COUNT=$(find .claude/commands -name "*.md" | wc -l)
          ROOT_CMD_COUNT=$(find commands -name "*.md" | wc -l)

          if [ "$CLAUDE_CMD_COUNT" != "$ROOT_CMD_COUNT" ]; then
            echo "ERROR: Command file count mismatch"
            exit 1
          fi

          echo "âœ“ Plugin files synced successfully"

      - name: Run tests
        run: make test

      - name: Run linter
        if: matrix.os == 'ubuntu-latest' && matrix.go == '1.22'
        run: make lint

      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.go == '1.22'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m
